(let ((a 1))
  (letrec ((add1 (lambda (b) (+ b 1)))
           (sub1 (lambda (b) (- b 1))))
    (let ((c (lambda (a)
               (if (let ((t.9 (if (= a 1) #f #t)))
                     (if t.9 t.9 (if (> a 1) (< a 4) #f)))
                   (add1 a)
                   (sub1 a)))))
      (let ((d (c a)) (e (c (add1 a))) (f (c (sub1 a))))
        (cons d (cons e (cons f (quote ()))))))))
